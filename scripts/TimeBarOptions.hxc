import funkin.modding.module.Module;
import funkin.ui.options.PreferencesMenu;
import funkin.ui.options.OptionsState;
import flixel.FlxG;
import Std;


class TimeBarOptions extends Module {



    function new (){
        super("Time Bar Options", 22);

        if (FlxG.save.data.timebar == null || FlxG.save.data.timebar == false || FlxG.save.data.timebar == true)
        {
            FlxG.save.data.timebar = "On";
        }
        if (FlxG.save.data.timebarmode == null || FlxG.save.data.timebarmode == true)
        {
            FlxG.save.data.timebarmode = "Time Left";
        }
        if (FlxG.save.data.timebarmode == false)
        {
            FlxG.save.data.timebarmode = "None";
        }
        if (FlxG.save.data.timebarpos == null || FlxG.save.data.timebarpos == false || FlxG.save.data.timebarpos == true)
        {
            FlxG.save.data.timebarpos = "Top";
        }
        if (FlxG.save.data.timebarcolour == null)
        {
            FlxG.save.data.timebarcolour = "Default (White)";
        }

        if (FlxG.save.data.timeTextPos == null)
        {
            FlxG.save.data.timeTextPos = "Default";
        }
    }

    function onStateChangeEnd(event)
    {
        super.onStateChangeEnd(event);

        if (Std.isOfType(event.targetState, OptionsState))
            {
      
            var preferences = event.targetState.optionsCodex.pages.get("preferences");

                preferences.createPrefItemEnum('Time Bar', 'Set the Time Bar', [
                "On" => "On",
                "Off" => "Off",
                "Wide" => "Wide",
                
                
            ],function(value:Bool):Void {
                FlxG.save.data.timebar = value;
                FlxG.save.flush();
            }, FlxG.save.data.timebar);      
                    
            preferences.createPrefItemEnum('Time Bar Fill Colour', 'Changes which colour should be shown when the bar is filling up.', [
                "Default (White)" => "Default (White)",
                "Opponent Icon" => "Opponent Icon",
                "Player Icon" => "Player Icon",
                
                
            ],function(value:Bool):Void {
                FlxG.save.data.timebarcolour = value;
                FlxG.save.flush();
            }, FlxG.save.data.timebarcolour);      


            preferences.createPrefItemEnum('Time Bar Text', 'Set what text should appear on the time bar', [
                "Song Name" => "Song Name",
                "Song Name + Difficulty" => "Song Name + Difficulty",
                "None" => "None",
                "Time Elapsed" => "Time Elapsed", 
                "Time Left" => "Time Left",
                
            ],function(value:Bool):Void {
                FlxG.save.data.timebarmode = value;
                FlxG.save.flush();
            }, FlxG.save.data.timebarmode);      

            preferences.createPrefItemEnum('Time Bar Position', 'Set where the time bar should be', [
                "Top" => "Top", 
                "Right" => "Right", 
                "Left" => "Left",
                "Force Middle" => "Force Middle",
                "Strumline" => "Strumline",    
            ], function(value:Bool):Void {
                FlxG.save.data.timebarpos = value;
                FlxG.save.flush();

            }, FlxG.save.data.timebarpos);   

            preferences.createPrefItemEnum('Time Text Position', 'Set where the time text should be', ["Default" => "Default", "Strumline" => "Strumline",], function(value:Bool):Void {
                FlxG.save.data.timeTextPos = value;
                FlxG.save.flush();

            }, FlxG.save.data.timeTextPos);      


    

        }
    }


}
